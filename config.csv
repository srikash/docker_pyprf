# PyPRF config file.

# Part of pyprf library
# Copyright (C) 2018  Ingo Marquardt
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program.  If not, see <http://www.gnu.org/licenses/>.

# Number of x-positions to model:
varNumX = 40
# Number of y-positions to model:
varNumY = 40
# Number of pRF sizes to model:
varNumPrfSizes = 40

# Extent of visual space from centre of the screen in negative x-direction
# (i.e. from the fixation point to the left end of the screen) in degrees of
# visual angle.
varExtXmin = -5.19
# Extent of visual space from centre of the screen in positive x-direction
# (i.e. from the fixation point to the right end of the screen) in degrees of
# visual angle.
varExtXmax = 5.19
# Extent of visual space from centre of the screen in negative y-direction
# (i.e. from the fixation point to the lower end of the screen) in degrees of
# visual angle.
varExtYmin = -5.19
# Extent of visual space from centre of the screen in positive y-direction
# (i.e. from the fixation point to the upper end of the screen) in degrees of
# visual angle.
varExtYmax = 5.19

# Maximum and minimum pRF model size (standard deviation of 2D Gaussian)
# [degrees of visual angle]:
varPrfStdMin = 0.2
varPrfStdMax = 7.0

# Volume TR of input data [s]:
varTr = 2.046

# Voxel resolution of the fMRI data [mm]:
varVoxRes = 1.0

# Extent of temporal smoothing for fMRI data and pRF time course models
# [standard deviation of the Gaussian kernel, in seconds]:
varSdSmthTmp = 2.5

# Extent of spatial smoothing for fMRI data [standard deviation of the Gaussian
# kernel, in mm]
varSdSmthSpt = 1.0

# Perform linear trend removal on fMRI data?
lgcLinTrnd = True

# Number of processes to run in parallel:
varPar = 32

# Size of high-resolution visual space model in which the pRF models are
# created (x- and y-dimension). The x and y dimensions specified here need to
# be the same integer multiple of the number of x- and y-positions to model, as
# specified above. In other words, if the the resolution in x-direction of the
# visual space model is ten times that of varNumX, the resolution in
# y-direction also has to be ten times varNumY.
varVslSpcSzeX = 200
varVslSpcSzeY = 200

# Path(s) of functional data. List of strings with paths of one or more
# functional runs. The order of functional volumes, and their number, has to
# correspond to the order and number of PNG files containing the stimulus
# information. Note: Do not insert a line break.
lstPathNiiFunc = ['/data/${filename0}', '/data/${filename1}']

# Path of mask (to restrict pRF model finding):
strPathNiiMask = '/data/${filename3}'

# Output basename:
strPathOut = '/data/pyprf_results'

# Which version to use for pRF finding. 'numpy' or 'cython' for pRF finding on
# CPU, 'gpu' for using GPU.
strVersion = 'cython'

# Create pRF time course models?
lgcCrteMdl = True

# If we create new pRF time course models, the following parameters have to
# be provided:

# Basename of the screenshots (PNG images) of pRF stimuli. A list with one path
# per experimental run. Can be created by running
# `~/pyprf/stimulus_presentation/code/stimulus.py` with 'Logging mode' set to
# 'True'. (Number & order of entries in `lstPathNiiFunc` and `lstPathPng` has
# to match). Note: Do not insert a line break (i.e. all runs on one line).
lstPathPng = ['/data/${folder0}/frame_', '/data/${folder1}/frame_']

# Start index of PNG files. For instance, `varStrtIdx = 0` if the name of
# the first PNG file is `frame_000.png`, or `varStrtIdx = 1` if it is
# `frame_001.png`. When using the default pyprf stimulus presentation, the
# start index will be `1`.
varStrtIdx = 1

# Zero padding of PNG file names. For instance, `varStrtIdx = 3` if the
# name of PNG files is `file_007.png`, or `varStrtIdx = 4` if it is
# `file_0007.png`.
varZfill = 3

# Path to npy file with pRF time course models (to save or laod). Without file
# extension.
strPathMdl = '/data/pRF_test_model_tc'

# In case of a multi-run experiment, data may not fit into memory. In that
# case, you can switch to hdf5 mode, with reduced memory impact. Data are
# stored on disk (in hdf5 format). Performance may be slower.
lgcHdf5 = False
